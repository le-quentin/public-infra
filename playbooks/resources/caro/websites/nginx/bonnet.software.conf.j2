user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    # Enable compression
    gzip            on;
    gzip_vary       on;
    gzip_proxied    any;
    gzip_comp_level 6;
    gzip_types      text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    server {
        listen       80;
        server_name  {{ quentin_bonnet_software_dns_name }};
        root         /app;
        index        index.php index.html index.htm;

        # Prevent directory listing
        autoindex off;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";

        # Block access to sensitive directories
        location ~ ^/(\.git|cache|bin|logs|backup|webserver-configs|tests)/ {
            return 403;
        }

        # Block access to specific file types in system and vendor folders
        location ~ ^/(system|vendor)/.*\.(txt|xml|md|html|json|ya?ml|php|pl|py|cgi|twig|sh|bat)$ {
            return 403;
        }

        # Block access to specific file types in user folders
        location ~ ^/user/.*\.(txt|md|json|ya?ml|php|pl|py|cgi|twig|sh|bat)$ {
            return 403;
        }

        # Block all direct access to .md files
        location ~ \.md$ {
            return 403;
        }

        # Block all direct access to dot files/folders (except .well-known)
        location ~ /\.(?!well-known) {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Block access to specific files in root
        location ~ ^/(LICENSE\.txt|composer\.(lock|json)|\.htaccess)$ {
            return 403;
        }

        # PHP handling (already configured in base image, but we'll be explicit)
        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass unix:/var/run/php-fpm.sock;  # webdevops uses unix socket
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }

        # Default location block
        location / {
            try_files $uri $uri/index.php$is_args$args $uri/ =404;
        }
    }
} 
